using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DAL
{
    public class UnitOfWork : IDisposable
    {
        private readonly IASDataEntities _db = new IASDataEntities();
        private readonly IASDataLogEntities _dbLog = new IASDataLogEntities();
        private readonly IASDataAttachmentEntities _dbAttachment = new IASDataAttachmentEntities();
        private GenericRepository<Religion> _ReligionRepository; public GenericRepository<Religion> ReligionRepository { get { if (_ReligionRepository == null) { _ReligionRepository = new GenericRepository<Religion>(_db); } return _ReligionRepository; } }
        private GenericRepository<FamilyMember> _FamilyMemberRepository; public GenericRepository<FamilyMember> FamilyMemberRepository { get { if (_FamilyMemberRepository == null) { _FamilyMemberRepository = new GenericRepository<FamilyMember>(_db); } return _FamilyMemberRepository; } }
        private GenericRepository<WaterSource> _WaterSourceRepository; public GenericRepository<WaterSource> WaterSourceRepository { get { if (_WaterSourceRepository == null) { _WaterSourceRepository = new GenericRepository<WaterSource>(_db); } return _WaterSourceRepository; } }
        private GenericRepository<PersonChildAbuseType> _PersonChildAbuseTypeRepository; public GenericRepository<PersonChildAbuseType> PersonChildAbuseTypeRepository { get { if (_PersonChildAbuseTypeRepository == null) { _PersonChildAbuseTypeRepository = new GenericRepository<PersonChildAbuseType>(_db); } return _PersonChildAbuseTypeRepository; } }
        private GenericRepository<HouseType> _HouseTypeRepository; public GenericRepository<HouseType> HouseTypeRepository { get { if (_HouseTypeRepository == null) { _HouseTypeRepository = new GenericRepository<HouseType>(_db); } return _HouseTypeRepository; } }
        private GenericRepository<DepartmentBelive> _DepartmentBeliveRepository; public GenericRepository<DepartmentBelive> DepartmentBeliveRepository { get { if (_DepartmentBeliveRepository == null) { _DepartmentBeliveRepository = new GenericRepository<DepartmentBelive>(_db); } return _DepartmentBeliveRepository; } }
        private GenericRepository<DepartmentTeamGoods> _DepartmentTeamGoodsRepository; public GenericRepository<DepartmentTeamGoods> DepartmentTeamGoodsRepository { get { if (_DepartmentTeamGoodsRepository == null) { _DepartmentTeamGoodsRepository = new GenericRepository<DepartmentTeamGoods>(_db); } return _DepartmentTeamGoodsRepository; } }
        private GenericRepository<PersonTalent> _PersonTalentRepository; public GenericRepository<PersonTalent> PersonTalentRepository { get { if (_PersonTalentRepository == null) { _PersonTalentRepository = new GenericRepository<PersonTalent>(_db); } return _PersonTalentRepository; } }
        private GenericRepository<PersonStatus> _PersonStatusRepository; public GenericRepository<PersonStatus> PersonStatusRepository { get { if (_PersonStatusRepository == null) { _PersonStatusRepository = new GenericRepository<PersonStatus>(_db); } return _PersonStatusRepository; } }
        private GenericRepository<SegmentReconnaissanceWaterSource> _SegmentReconnaissanceWaterSourceRepository; public GenericRepository<SegmentReconnaissanceWaterSource> SegmentReconnaissanceWaterSourceRepository { get { if (_SegmentReconnaissanceWaterSourceRepository == null) { _SegmentReconnaissanceWaterSourceRepository = new GenericRepository<SegmentReconnaissanceWaterSource>(_db); } return _SegmentReconnaissanceWaterSourceRepository; } }
        private GenericRepository<DepartmentSupportingOrgan> _DepartmentSupportingOrganRepository; public GenericRepository<DepartmentSupportingOrgan> DepartmentSupportingOrganRepository { get { if (_DepartmentSupportingOrganRepository == null) { _DepartmentSupportingOrganRepository = new GenericRepository<DepartmentSupportingOrgan>(_db); } return _DepartmentSupportingOrganRepository; } }
        private GenericRepository<UserInfo> _UserInfoRepository; public GenericRepository<UserInfo> UserInfoRepository { get { if (_UserInfoRepository == null) { _UserInfoRepository = new GenericRepository<UserInfo>(_db); } return _UserInfoRepository; } }
        private GenericRepository<Bank> _BankRepository; public GenericRepository<Bank> BankRepository { get { if (_BankRepository == null) { _BankRepository = new GenericRepository<Bank>(_db); } return _BankRepository; } }
        private GenericRepository<EducationYearClassMember> _EducationYearClassMemberRepository; public GenericRepository<EducationYearClassMember> EducationYearClassMemberRepository { get { if (_EducationYearClassMemberRepository == null) { _EducationYearClassMemberRepository = new GenericRepository<EducationYearClassMember>(_db); } return _EducationYearClassMemberRepository; } }
        private GenericRepository<DepartmentChildAbuseType> _DepartmentChildAbuseTypeRepository; public GenericRepository<DepartmentChildAbuseType> DepartmentChildAbuseTypeRepository { get { if (_DepartmentChildAbuseTypeRepository == null) { _DepartmentChildAbuseTypeRepository = new GenericRepository<DepartmentChildAbuseType>(_db); } return _DepartmentChildAbuseTypeRepository; } }
        private GenericRepository<DrugWithdrawalHistory> _DrugWithdrawalHistoryRepository; public GenericRepository<DrugWithdrawalHistory> DrugWithdrawalHistoryRepository { get { if (_DrugWithdrawalHistoryRepository == null) { _DrugWithdrawalHistoryRepository = new GenericRepository<DrugWithdrawalHistory>(_db); } return _DrugWithdrawalHistoryRepository; } }
        private GenericRepository<sysdiagrams> _sysdiagramsRepository; public GenericRepository<sysdiagrams> sysdiagramsRepository { get { if (_sysdiagramsRepository == null) { _sysdiagramsRepository = new GenericRepository<sysdiagrams>(_db); } return _sysdiagramsRepository; } }
        private GenericRepository<SegmentReconnaissance> _SegmentReconnaissanceRepository; public GenericRepository<SegmentReconnaissance> SegmentReconnaissanceRepository { get { if (_SegmentReconnaissanceRepository == null) { _SegmentReconnaissanceRepository = new GenericRepository<SegmentReconnaissance>(_db); } return _SegmentReconnaissanceRepository; } }
        private GenericRepository<FacilityCategory> _FacilityCategoryRepository; public GenericRepository<FacilityCategory> FacilityCategoryRepository { get { if (_FacilityCategoryRepository == null) { _FacilityCategoryRepository = new GenericRepository<FacilityCategory>(_db); } return _FacilityCategoryRepository; } }
        private GenericRepository<HousePhone> _HousePhoneRepository; public GenericRepository<HousePhone> HousePhoneRepository { get { if (_HousePhoneRepository == null) { _HousePhoneRepository = new GenericRepository<HousePhone>(_db); } return _HousePhoneRepository; } }
        private GenericRepository<ServiceType> _ServiceTypeRepository; public GenericRepository<ServiceType> ServiceTypeRepository { get { if (_ServiceTypeRepository == null) { _ServiceTypeRepository = new GenericRepository<ServiceType>(_db); } return _ServiceTypeRepository; } }
        private GenericRepository<AccessLevel> _AccessLevelRepository; public GenericRepository<AccessLevel> AccessLevelRepository { get { if (_AccessLevelRepository == null) { _AccessLevelRepository = new GenericRepository<AccessLevel>(_db); } return _AccessLevelRepository; } }
        private GenericRepository<SegmentWaterSource> _SegmentWaterSourceRepository; public GenericRepository<SegmentWaterSource> SegmentWaterSourceRepository { get { if (_SegmentWaterSourceRepository == null) { _SegmentWaterSourceRepository = new GenericRepository<SegmentWaterSource>(_db); } return _SegmentWaterSourceRepository; } }
        private GenericRepository<DepartmentWaterSource> _DepartmentWaterSourceRepository; public GenericRepository<DepartmentWaterSource> DepartmentWaterSourceRepository { get { if (_DepartmentWaterSourceRepository == null) { _DepartmentWaterSourceRepository = new GenericRepository<DepartmentWaterSource>(_db); } return _DepartmentWaterSourceRepository; } }
        private GenericRepository<EducationYearClassCourse> _EducationYearClassCourseRepository; public GenericRepository<EducationYearClassCourse> EducationYearClassCourseRepository { get { if (_EducationYearClassCourseRepository == null) { _EducationYearClassCourseRepository = new GenericRepository<EducationYearClassCourse>(_db); } return _EducationYearClassCourseRepository; } }
        private GenericRepository<FacilityType> _FacilityTypeRepository; public GenericRepository<FacilityType> FacilityTypeRepository { get { if (_FacilityTypeRepository == null) { _FacilityTypeRepository = new GenericRepository<FacilityType>(_db); } return _FacilityTypeRepository; } }
        private GenericRepository<ResidenceType> _ResidenceTypeRepository; public GenericRepository<ResidenceType> ResidenceTypeRepository { get { if (_ResidenceTypeRepository == null) { _ResidenceTypeRepository = new GenericRepository<ResidenceType>(_db); } return _ResidenceTypeRepository; } }
        private GenericRepository<DepartmentChildMarriageCause> _DepartmentChildMarriageCauseRepository; public GenericRepository<DepartmentChildMarriageCause> DepartmentChildMarriageCauseRepository { get { if (_DepartmentChildMarriageCauseRepository == null) { _DepartmentChildMarriageCauseRepository = new GenericRepository<DepartmentChildMarriageCause>(_db); } return _DepartmentChildMarriageCauseRepository; } }
        private GenericRepository<HouseStatus> _HouseStatusRepository; public GenericRepository<HouseStatus> HouseStatusRepository { get { if (_HouseStatusRepository == null) { _HouseStatusRepository = new GenericRepository<HouseStatus>(_db); } return _HouseStatusRepository; } }
        private GenericRepository<BaseInfoGroup> _BaseInfoGroupRepository; public GenericRepository<BaseInfoGroup> BaseInfoGroupRepository { get { if (_BaseInfoGroupRepository == null) { _BaseInfoGroupRepository = new GenericRepository<BaseInfoGroup>(_db); } return _BaseInfoGroupRepository; } }
        private GenericRepository<DepartmentSkillType> _DepartmentSkillTypeRepository; public GenericRepository<DepartmentSkillType> DepartmentSkillTypeRepository { get { if (_DepartmentSkillTypeRepository == null) { _DepartmentSkillTypeRepository = new GenericRepository<DepartmentSkillType>(_db); } return _DepartmentSkillTypeRepository; } }
        private GenericRepository<PersonFacilityType> _PersonFacilityTypeRepository; public GenericRepository<PersonFacilityType> PersonFacilityTypeRepository { get { if (_PersonFacilityTypeRepository == null) { _PersonFacilityTypeRepository = new GenericRepository<PersonFacilityType>(_db); } return _PersonFacilityTypeRepository; } }
        private GenericRepository<Workshop> _WorkshopRepository; public GenericRepository<Workshop> WorkshopRepository { get { if (_WorkshopRepository == null) { _WorkshopRepository = new GenericRepository<Workshop>(_db); } return _WorkshopRepository; } }
        private GenericRepository<PersonSupportingOrgan> _PersonSupportingOrganRepository; public GenericRepository<PersonSupportingOrgan> PersonSupportingOrganRepository { get { if (_PersonSupportingOrganRepository == null) { _PersonSupportingOrganRepository = new GenericRepository<PersonSupportingOrgan>(_db); } return _PersonSupportingOrganRepository; } }
        private GenericRepository<FamilyStatus> _FamilyStatusRepository; public GenericRepository<FamilyStatus> FamilyStatusRepository { get { if (_FamilyStatusRepository == null) { _FamilyStatusRepository = new GenericRepository<FamilyStatus>(_db); } return _FamilyStatusRepository; } }
        private GenericRepository<DepartmentCrimeType> _DepartmentCrimeTypeRepository; public GenericRepository<DepartmentCrimeType> DepartmentCrimeTypeRepository { get { if (_DepartmentCrimeTypeRepository == null) { _DepartmentCrimeTypeRepository = new GenericRepository<DepartmentCrimeType>(_db); } return _DepartmentCrimeTypeRepository; } }
        private GenericRepository<TraningCourseType> _TraningCourseTypeRepository; public GenericRepository<TraningCourseType> TraningCourseTypeRepository { get { if (_TraningCourseTypeRepository == null) { _TraningCourseTypeRepository = new GenericRepository<TraningCourseType>(_db); } return _TraningCourseTypeRepository; } }
        private GenericRepository<EducationType> _EducationTypeRepository; public GenericRepository<EducationType> EducationTypeRepository { get { if (_EducationTypeRepository == null) { _EducationTypeRepository = new GenericRepository<EducationType>(_db); } return _EducationTypeRepository; } }
        private GenericRepository<SkillTypeLevel> _SkillTypeLevelRepository; public GenericRepository<SkillTypeLevel> SkillTypeLevelRepository { get { if (_SkillTypeLevelRepository == null) { _SkillTypeLevelRepository = new GenericRepository<SkillTypeLevel>(_db); } return _SkillTypeLevelRepository; } }
        private GenericRepository<SegmentEthnic> _SegmentEthnicRepository; public GenericRepository<SegmentEthnic> SegmentEthnicRepository { get { if (_SegmentEthnicRepository == null) { _SegmentEthnicRepository = new GenericRepository<SegmentEthnic>(_db); } return _SegmentEthnicRepository; } }
        private GenericRepository<SupportingOrgan> _SupportingOrganRepository; public GenericRepository<SupportingOrgan> SupportingOrganRepository { get { if (_SupportingOrganRepository == null) { _SupportingOrganRepository = new GenericRepository<SupportingOrgan>(_db); } return _SupportingOrganRepository; } }
        private GenericRepository<PersonWorkshop> _PersonWorkshopRepository; public GenericRepository<PersonWorkshop> PersonWorkshopRepository { get { if (_PersonWorkshopRepository == null) { _PersonWorkshopRepository = new GenericRepository<PersonWorkshop>(_db); } return _PersonWorkshopRepository; } }
        private GenericRepository<PersonTraningCourseType> _PersonTraningCourseTypeRepository; public GenericRepository<PersonTraningCourseType> PersonTraningCourseTypeRepository { get { if (_PersonTraningCourseTypeRepository == null) { _PersonTraningCourseTypeRepository = new GenericRepository<PersonTraningCourseType>(_db); } return _PersonTraningCourseTypeRepository; } }
        private GenericRepository<Family> _FamilyRepository; public GenericRepository<Family> FamilyRepository { get { if (_FamilyRepository == null) { _FamilyRepository = new GenericRepository<Family>(_db); } return _FamilyRepository; } }
        private GenericRepository<DepartmentJob> _DepartmentJobRepository; public GenericRepository<DepartmentJob> DepartmentJobRepository { get { if (_DepartmentJobRepository == null) { _DepartmentJobRepository = new GenericRepository<DepartmentJob>(_db); } return _DepartmentJobRepository; } }
        private GenericRepository<Workspace> _WorkspaceRepository; public GenericRepository<Workspace> WorkspaceRepository { get { if (_WorkspaceRepository == null) { _WorkspaceRepository = new GenericRepository<Workspace>(_db); } return _WorkspaceRepository; } }
        private GenericRepository<DepartmentDiedCause> _DepartmentDiedCauseRepository; public GenericRepository<DepartmentDiedCause> DepartmentDiedCauseRepository { get { if (_DepartmentDiedCauseRepository == null) { _DepartmentDiedCauseRepository = new GenericRepository<DepartmentDiedCause>(_db); } return _DepartmentDiedCauseRepository; } }
        private GenericRepository<PersonnelWorkshop> _PersonnelWorkshopRepository; public GenericRepository<PersonnelWorkshop> PersonnelWorkshopRepository { get { if (_PersonnelWorkshopRepository == null) { _PersonnelWorkshopRepository = new GenericRepository<PersonnelWorkshop>(_db); } return _PersonnelWorkshopRepository; } }
        private GenericRepository<DepartmentType> _DepartmentTypeRepository; public GenericRepository<DepartmentType> DepartmentTypeRepository { get { if (_DepartmentTypeRepository == null) { _DepartmentTypeRepository = new GenericRepository<DepartmentType>(_db); } return _DepartmentTypeRepository; } }
        private GenericRepository<PersonSupportingOrganServiceType> _PersonSupportingOrganServiceTypeRepository; public GenericRepository<PersonSupportingOrganServiceType> PersonSupportingOrganServiceTypeRepository { get { if (_PersonSupportingOrganServiceTypeRepository == null) { _PersonSupportingOrganServiceTypeRepository = new GenericRepository<PersonSupportingOrganServiceType>(_db); } return _PersonSupportingOrganServiceTypeRepository; } }
        private GenericRepository<SegmentReconnaissanceEthnic> _SegmentReconnaissanceEthnicRepository; public GenericRepository<SegmentReconnaissanceEthnic> SegmentReconnaissanceEthnicRepository { get { if (_SegmentReconnaissanceEthnicRepository == null) { _SegmentReconnaissanceEthnicRepository = new GenericRepository<SegmentReconnaissanceEthnic>(_db); } return _SegmentReconnaissanceEthnicRepository; } }
        private GenericRepository<PersonInsuranceType> _PersonInsuranceTypeRepository; public GenericRepository<PersonInsuranceType> PersonInsuranceTypeRepository { get { if (_PersonInsuranceTypeRepository == null) { _PersonInsuranceTypeRepository = new GenericRepository<PersonInsuranceType>(_db); } return _PersonInsuranceTypeRepository; } }
        private GenericRepository<PersonToothStatus> _PersonToothStatusRepository; public GenericRepository<PersonToothStatus> PersonToothStatusRepository { get { if (_PersonToothStatusRepository == null) { _PersonToothStatusRepository = new GenericRepository<PersonToothStatus>(_db); } return _PersonToothStatusRepository; } }
        private GenericRepository<Course> _CourseRepository; public GenericRepository<Course> CourseRepository { get { if (_CourseRepository == null) { _CourseRepository = new GenericRepository<Course>(_db); } return _CourseRepository; } }
        private GenericRepository<DepartmentDisableType> _DepartmentDisableTypeRepository; public GenericRepository<DepartmentDisableType> DepartmentDisableTypeRepository { get { if (_DepartmentDisableTypeRepository == null) { _DepartmentDisableTypeRepository = new GenericRepository<DepartmentDisableType>(_db); } return _DepartmentDisableTypeRepository; } }
        private GenericRepository<EducationYear> _EducationYearRepository; public GenericRepository<EducationYear> EducationYearRepository { get { if (_EducationYearRepository == null) { _EducationYearRepository = new GenericRepository<EducationYear>(_db); } return _EducationYearRepository; } }
        private GenericRepository<DepartmentTeam> _DepartmentTeamRepository; public GenericRepository<DepartmentTeam> DepartmentTeamRepository { get { if (_DepartmentTeamRepository == null) { _DepartmentTeamRepository = new GenericRepository<DepartmentTeam>(_db); } return _DepartmentTeamRepository; } }
        private GenericRepository<IdentityDocument> _IdentityDocumentRepository; public GenericRepository<IdentityDocument> IdentityDocumentRepository { get { if (_IdentityDocumentRepository == null) { _IdentityDocumentRepository = new GenericRepository<IdentityDocument>(_db); } return _IdentityDocumentRepository; } }
        private GenericRepository<WeekDay> _WeekDayRepository; public GenericRepository<WeekDay> WeekDayRepository { get { if (_WeekDayRepository == null) { _WeekDayRepository = new GenericRepository<WeekDay>(_db); } return _WeekDayRepository; } }
        private GenericRepository<PlaceCategory> _PlaceCategoryRepository; public GenericRepository<PlaceCategory> PlaceCategoryRepository { get { if (_PlaceCategoryRepository == null) { _PlaceCategoryRepository = new GenericRepository<PlaceCategory>(_db); } return _PlaceCategoryRepository; } }
        private GenericRepository<Ethnic> _EthnicRepository; public GenericRepository<Ethnic> EthnicRepository { get { if (_EthnicRepository == null) { _EthnicRepository = new GenericRepository<Ethnic>(_db); } return _EthnicRepository; } }
        private GenericRepository<LeavingHouseCause> _LeavingHouseCauseRepository; public GenericRepository<LeavingHouseCause> LeavingHouseCauseRepository { get { if (_LeavingHouseCauseRepository == null) { _LeavingHouseCauseRepository = new GenericRepository<LeavingHouseCause>(_db); } return _LeavingHouseCauseRepository; } }
        private GenericRepository<FamilyReconnaissance> _FamilyReconnaissanceRepository; public GenericRepository<FamilyReconnaissance> FamilyReconnaissanceRepository { get { if (_FamilyReconnaissanceRepository == null) { _FamilyReconnaissanceRepository = new GenericRepository<FamilyReconnaissance>(_db); } return _FamilyReconnaissanceRepository; } }
        private GenericRepository<PersonJob> _PersonJobRepository; public GenericRepository<PersonJob> PersonJobRepository { get { if (_PersonJobRepository == null) { _PersonJobRepository = new GenericRepository<PersonJob>(_db); } return _PersonJobRepository; } }
        private GenericRepository<PersonIdentityDocument> _PersonIdentityDocumentRepository; public GenericRepository<PersonIdentityDocument> PersonIdentityDocumentRepository { get { if (_PersonIdentityDocumentRepository == null) { _PersonIdentityDocumentRepository = new GenericRepository<PersonIdentityDocument>(_db); } return _PersonIdentityDocumentRepository; } }
        private GenericRepository<PersonnelSkillType> _PersonnelSkillTypeRepository; public GenericRepository<PersonnelSkillType> PersonnelSkillTypeRepository { get { if (_PersonnelSkillTypeRepository == null) { _PersonnelSkillTypeRepository = new GenericRepository<PersonnelSkillType>(_db); } return _PersonnelSkillTypeRepository; } }
        private GenericRepository<TradingType> _TradingTypeRepository; public GenericRepository<TradingType> TradingTypeRepository { get { if (_TradingTypeRepository == null) { _TradingTypeRepository = new GenericRepository<TradingType>(_db); } return _TradingTypeRepository; } }
        private GenericRepository<DepartmentDrugType> _DepartmentDrugTypeRepository; public GenericRepository<DepartmentDrugType> DepartmentDrugTypeRepository { get { if (_DepartmentDrugTypeRepository == null) { _DepartmentDrugTypeRepository = new GenericRepository<DepartmentDrugType>(_db); } return _DepartmentDrugTypeRepository; } }
        private GenericRepository<EducationYearClass> _EducationYearClassRepository; public GenericRepository<EducationYearClass> EducationYearClassRepository { get { if (_EducationYearClassRepository == null) { _EducationYearClassRepository = new GenericRepository<EducationYearClass>(_db); } return _EducationYearClassRepository; } }
        private GenericRepository<HouseFamily> _HouseFamilyRepository; public GenericRepository<HouseFamily> HouseFamilyRepository { get { if (_HouseFamilyRepository == null) { _HouseFamilyRepository = new GenericRepository<HouseFamily>(_db); } return _HouseFamilyRepository; } }
        private GenericRepository<ExpenseType> _ExpenseTypeRepository; public GenericRepository<ExpenseType> ExpenseTypeRepository { get { if (_ExpenseTypeRepository == null) { _ExpenseTypeRepository = new GenericRepository<ExpenseType>(_db); } return _ExpenseTypeRepository; } }
        private GenericRepository<PlaceType> _PlaceTypeRepository; public GenericRepository<PlaceType> PlaceTypeRepository { get { if (_PlaceTypeRepository == null) { _PlaceTypeRepository = new GenericRepository<PlaceType>(_db); } return _PlaceTypeRepository; } }
        private GenericRepository<DepartmentTeamExerciseTime> _DepartmentTeamExerciseTimeRepository; public GenericRepository<DepartmentTeamExerciseTime> DepartmentTeamExerciseTimeRepository { get { if (_DepartmentTeamExerciseTimeRepository == null) { _DepartmentTeamExerciseTimeRepository = new GenericRepository<DepartmentTeamExerciseTime>(_db); } return _DepartmentTeamExerciseTimeRepository; } }
        private GenericRepository<EquipmentType> _EquipmentTypeRepository; public GenericRepository<EquipmentType> EquipmentTypeRepository { get { if (_EquipmentTypeRepository == null) { _EquipmentTypeRepository = new GenericRepository<EquipmentType>(_db); } return _EquipmentTypeRepository; } }
        private GenericRepository<DepartmentTeamCompetition> _DepartmentTeamCompetitionRepository; public GenericRepository<DepartmentTeamCompetition> DepartmentTeamCompetitionRepository { get { if (_DepartmentTeamCompetitionRepository == null) { _DepartmentTeamCompetitionRepository = new GenericRepository<DepartmentTeamCompetition>(_db); } return _DepartmentTeamCompetitionRepository; } }
        private GenericRepository<IncomeType> _IncomeTypeRepository; public GenericRepository<IncomeType> IncomeTypeRepository { get { if (_IncomeTypeRepository == null) { _IncomeTypeRepository = new GenericRepository<IncomeType>(_db); } return _IncomeTypeRepository; } }
        private GenericRepository<AddressComponentType> _AddressComponentTypeRepository; public GenericRepository<AddressComponentType> AddressComponentTypeRepository { get { if (_AddressComponentTypeRepository == null) { _AddressComponentTypeRepository = new GenericRepository<AddressComponentType>(_db); } return _AddressComponentTypeRepository; } }
        private GenericRepository<ActivityType> _ActivityTypeRepository; public GenericRepository<ActivityType> ActivityTypeRepository { get { if (_ActivityTypeRepository == null) { _ActivityTypeRepository = new GenericRepository<ActivityType>(_db); } return _ActivityTypeRepository; } }
        private GenericRepository<DepartmentEducationField> _DepartmentEducationFieldRepository; public GenericRepository<DepartmentEducationField> DepartmentEducationFieldRepository { get { if (_DepartmentEducationFieldRepository == null) { _DepartmentEducationFieldRepository = new GenericRepository<DepartmentEducationField>(_db); } return _DepartmentEducationFieldRepository; } }
        private GenericRepository<UserDepartment> _UserDepartmentRepository; public GenericRepository<UserDepartment> UserDepartmentRepository { get { if (_UserDepartmentRepository == null) { _UserDepartmentRepository = new GenericRepository<UserDepartment>(_db); } return _UserDepartmentRepository; } }
        private GenericRepository<PersonExpense> _PersonExpenseRepository; public GenericRepository<PersonExpense> PersonExpenseRepository { get { if (_PersonExpenseRepository == null) { _PersonExpenseRepository = new GenericRepository<PersonExpense>(_db); } return _PersonExpenseRepository; } }
        private GenericRepository<SegmentReconnaissancePlaceType> _SegmentReconnaissancePlaceTypeRepository; public GenericRepository<SegmentReconnaissancePlaceType> SegmentReconnaissancePlaceTypeRepository { get { if (_SegmentReconnaissancePlaceTypeRepository == null) { _SegmentReconnaissancePlaceTypeRepository = new GenericRepository<SegmentReconnaissancePlaceType>(_db); } return _SegmentReconnaissancePlaceTypeRepository; } }
        private GenericRepository<Appliance> _ApplianceRepository; public GenericRepository<Appliance> ApplianceRepository { get { if (_ApplianceRepository == null) { _ApplianceRepository = new GenericRepository<Appliance>(_db); } return _ApplianceRepository; } }
        private GenericRepository<ActivityField> _ActivityFieldRepository; public GenericRepository<ActivityField> ActivityFieldRepository { get { if (_ActivityFieldRepository == null) { _ActivityFieldRepository = new GenericRepository<ActivityField>(_db); } return _ActivityFieldRepository; } }
        private GenericRepository<DepartmentTeamExerciseHistory> _DepartmentTeamExerciseHistoryRepository; public GenericRepository<DepartmentTeamExerciseHistory> DepartmentTeamExerciseHistoryRepository { get { if (_DepartmentTeamExerciseHistoryRepository == null) { _DepartmentTeamExerciseHistoryRepository = new GenericRepository<DepartmentTeamExerciseHistory>(_db); } return _DepartmentTeamExerciseHistoryRepository; } }
        private GenericRepository<PersonIncome> _PersonIncomeRepository; public GenericRepository<PersonIncome> PersonIncomeRepository { get { if (_PersonIncomeRepository == null) { _PersonIncomeRepository = new GenericRepository<PersonIncome>(_db); } return _PersonIncomeRepository; } }
        private GenericRepository<EducationField> _EducationFieldRepository; public GenericRepository<EducationField> EducationFieldRepository { get { if (_EducationFieldRepository == null) { _EducationFieldRepository = new GenericRepository<EducationField>(_db); } return _EducationFieldRepository; } }
        private GenericRepository<DepartmentEducationType> _DepartmentEducationTypeRepository; public GenericRepository<DepartmentEducationType> DepartmentEducationTypeRepository { get { if (_DepartmentEducationTypeRepository == null) { _DepartmentEducationTypeRepository = new GenericRepository<DepartmentEducationType>(_db); } return _DepartmentEducationTypeRepository; } }
        private LogRepository<HttpLog> _HttpLogRepository; public LogRepository<HttpLog> HttpLogRepository { get { if (_HttpLogRepository == null) { _HttpLogRepository = new LogRepository<HttpLog>(_dbLog); } return _HttpLogRepository; } }
        private GenericRepository<HouseAppliance> _HouseApplianceRepository; public GenericRepository<HouseAppliance> HouseApplianceRepository { get { if (_HouseApplianceRepository == null) { _HouseApplianceRepository = new GenericRepository<HouseAppliance>(_db); } return _HouseApplianceRepository; } }
        private GenericRepository<Department> _DepartmentRepository; public GenericRepository<Department> DepartmentRepository { get { if (_DepartmentRepository == null) { _DepartmentRepository = new GenericRepository<Department>(_db); } return _DepartmentRepository; } }
        private GenericRepository<House> _HouseRepository; public GenericRepository<House> HouseRepository { get { if (_HouseRepository == null) { _HouseRepository = new GenericRepository<House>(_db); } return _HouseRepository; } }
        private GenericRepository<Grade> _GradeRepository; public GenericRepository<Grade> GradeRepository { get { if (_GradeRepository == null) { _GradeRepository = new GenericRepository<Grade>(_db); } return _GradeRepository; } }
        private GenericRepository<HealthType> _HealthTypeRepository; public GenericRepository<HealthType> HealthTypeRepository { get { if (_HealthTypeRepository == null) { _HealthTypeRepository = new GenericRepository<HealthType>(_db); } return _HealthTypeRepository; } }
        private GenericRepository<CompetitionType> _CompetitionTypeRepository; public GenericRepository<CompetitionType> CompetitionTypeRepository { get { if (_CompetitionTypeRepository == null) { _CompetitionTypeRepository = new GenericRepository<CompetitionType>(_db); } return _CompetitionTypeRepository; } }
        private AttachmentRepository<Attachment> _AttachmentRepository; public AttachmentRepository<Attachment> AttachmentRepository { get { if (_AttachmentRepository == null) { _AttachmentRepository = new AttachmentRepository<Attachment>(_dbAttachment); } return _AttachmentRepository; } }
        private AttachmentRepository<AttachmentType> _AttachmentTypeRepository; public AttachmentRepository<AttachmentType> AttachmentTypeRepository { get { if (_AttachmentTypeRepository == null) { _AttachmentTypeRepository = new AttachmentRepository<AttachmentType>(_dbAttachment); } return _AttachmentTypeRepository; } }
        private GenericRepository<HouseBuildingMaterial> _HouseBuildingMaterialRepository; public GenericRepository<HouseBuildingMaterial> HouseBuildingMaterialRepository { get { if (_HouseBuildingMaterialRepository == null) { _HouseBuildingMaterialRepository = new GenericRepository<HouseBuildingMaterial>(_db); } return _HouseBuildingMaterialRepository; } }
        private GenericRepository<ToothType> _ToothTypeRepository; public GenericRepository<ToothType> ToothTypeRepository { get { if (_ToothTypeRepository == null) { _ToothTypeRepository = new GenericRepository<ToothType>(_db); } return _ToothTypeRepository; } }
        private GenericRepository<Alley> _AlleyRepository; public GenericRepository<Alley> AlleyRepository { get { if (_AlleyRepository == null) { _AlleyRepository = new GenericRepository<Alley>(_db); } return _AlleyRepository; } }
        private GenericRepository<MaritalStatus> _MaritalStatusRepository; public GenericRepository<MaritalStatus> MaritalStatusRepository { get { if (_MaritalStatusRepository == null) { _MaritalStatusRepository = new GenericRepository<MaritalStatus>(_db); } return _MaritalStatusRepository; } }
        private GenericRepository<DepartmentEthnic> _DepartmentEthnicRepository; public GenericRepository<DepartmentEthnic> DepartmentEthnicRepository { get { if (_DepartmentEthnicRepository == null) { _DepartmentEthnicRepository = new GenericRepository<DepartmentEthnic>(_db); } return _DepartmentEthnicRepository; } }
        private GenericRepository<PersonnelFreeDay> _PersonnelFreeDayRepository; public GenericRepository<PersonnelFreeDay> PersonnelFreeDayRepository { get { if (_PersonnelFreeDayRepository == null) { _PersonnelFreeDayRepository = new GenericRepository<PersonnelFreeDay>(_db); } return _PersonnelFreeDayRepository; } }
        private GenericRepository<CrimeType> _CrimeTypeRepository; public GenericRepository<CrimeType> CrimeTypeRepository { get { if (_CrimeTypeRepository == null) { _CrimeTypeRepository = new GenericRepository<CrimeType>(_db); } return _CrimeTypeRepository; } }
        private GenericRepository<CourseAssessmentModel> _CourseAssessmentModelRepository; public GenericRepository<CourseAssessmentModel> CourseAssessmentModelRepository { get { if (_CourseAssessmentModelRepository == null) { _CourseAssessmentModelRepository = new GenericRepository<CourseAssessmentModel>(_db); } return _CourseAssessmentModelRepository; } }
        private GenericRepository<Tooth> _ToothRepository; public GenericRepository<Tooth> ToothRepository { get { if (_ToothRepository == null) { _ToothRepository = new GenericRepository<Tooth>(_db); } return _ToothRepository; } }
        private GenericRepository<SicknessType> _SicknessTypeRepository; public GenericRepository<SicknessType> SicknessTypeRepository { get { if (_SicknessTypeRepository == null) { _SicknessTypeRepository = new GenericRepository<SicknessType>(_db); } return _SicknessTypeRepository; } }
        private GenericRepository<Street> _StreetRepository; public GenericRepository<Street> StreetRepository { get { if (_StreetRepository == null) { _StreetRepository = new GenericRepository<Street>(_db); } return _StreetRepository; } }
        private GenericRepository<DepartmentAppliance> _DepartmentApplianceRepository; public GenericRepository<DepartmentAppliance> DepartmentApplianceRepository { get { if (_DepartmentApplianceRepository == null) { _DepartmentApplianceRepository = new GenericRepository<DepartmentAppliance>(_db); } return _DepartmentApplianceRepository; } }
        private GenericRepository<SegmentReconnaissanceFuelType> _SegmentReconnaissanceFuelTypeRepository; public GenericRepository<SegmentReconnaissanceFuelType> SegmentReconnaissanceFuelTypeRepository { get { if (_SegmentReconnaissanceFuelTypeRepository == null) { _SegmentReconnaissanceFuelTypeRepository = new GenericRepository<SegmentReconnaissanceFuelType>(_db); } return _SegmentReconnaissanceFuelTypeRepository; } }
        private GenericRepository<PunishmentStatus> _PunishmentStatusRepository; public GenericRepository<PunishmentStatus> PunishmentStatusRepository { get { if (_PunishmentStatusRepository == null) { _PunishmentStatusRepository = new GenericRepository<PunishmentStatus>(_db); } return _PunishmentStatusRepository; } }
        private GenericRepository<PersonTeam> _PersonTeamRepository; public GenericRepository<PersonTeam> PersonTeamRepository { get { if (_PersonTeamRepository == null) { _PersonTeamRepository = new GenericRepository<PersonTeam>(_db); } return _PersonTeamRepository; } }
        private GenericRepository<ToothStatus> _ToothStatusRepository; public GenericRepository<ToothStatus> ToothStatusRepository { get { if (_ToothStatusRepository == null) { _ToothStatusRepository = new GenericRepository<ToothStatus>(_db); } return _ToothStatusRepository; } }
        private GenericRepository<PunishmentClass> _PunishmentClassRepository; public GenericRepository<PunishmentClass> PunishmentClassRepository { get { if (_PunishmentClassRepository == null) { _PunishmentClassRepository = new GenericRepository<PunishmentClass>(_db); } return _PunishmentClassRepository; } }
        private GenericRepository<AddressComponent> _AddressComponentRepository; public GenericRepository<AddressComponent> AddressComponentRepository { get { if (_AddressComponentRepository == null) { _AddressComponentRepository = new GenericRepository<AddressComponent>(_db); } return _AddressComponentRepository; } }
        private GenericRepository<Competition> _CompetitionRepository; public GenericRepository<Competition> CompetitionRepository { get { if (_CompetitionRepository == null) { _CompetitionRepository = new GenericRepository<Competition>(_db); } return _CompetitionRepository; } }
        private GenericRepository<PersonnelActivityField> _PersonnelActivityFieldRepository; public GenericRepository<PersonnelActivityField> PersonnelActivityFieldRepository { get { if (_PersonnelActivityFieldRepository == null) { _PersonnelActivityFieldRepository = new GenericRepository<PersonnelActivityField>(_db); } return _PersonnelActivityFieldRepository; } }
        private GenericRepository<PersonSicknessType> _PersonSicknessTypeRepository; public GenericRepository<PersonSicknessType> PersonSicknessTypeRepository { get { if (_PersonSicknessTypeRepository == null) { _PersonSicknessTypeRepository = new GenericRepository<PersonSicknessType>(_db); } return _PersonSicknessTypeRepository; } }
        private GenericRepository<DepartmentFuelType> _DepartmentFuelTypeRepository; public GenericRepository<DepartmentFuelType> DepartmentFuelTypeRepository { get { if (_DepartmentFuelTypeRepository == null) { _DepartmentFuelTypeRepository = new GenericRepository<DepartmentFuelType>(_db); } return _DepartmentFuelTypeRepository; } }
        private GenericRepository<SegmentPlaceType> _SegmentPlaceTypeRepository; public GenericRepository<SegmentPlaceType> SegmentPlaceTypeRepository { get { if (_SegmentPlaceTypeRepository == null) { _SegmentPlaceTypeRepository = new GenericRepository<SegmentPlaceType>(_db); } return _SegmentPlaceTypeRepository; } }
        private GenericRepository<BloodType> _BloodTypeRepository; public GenericRepository<BloodType> BloodTypeRepository { get { if (_BloodTypeRepository == null) { _BloodTypeRepository = new GenericRepository<BloodType>(_db); } return _BloodTypeRepository; } }
        private GenericRepository<BaseInfo> _BaseInfoRepository; public GenericRepository<BaseInfo> BaseInfoRepository { get { if (_BaseInfoRepository == null) { _BaseInfoRepository = new GenericRepository<BaseInfo>(_db); } return _BaseInfoRepository; } }
        private GenericRepository<PunishmentType> _PunishmentTypeRepository; public GenericRepository<PunishmentType> PunishmentTypeRepository { get { if (_PunishmentTypeRepository == null) { _PunishmentTypeRepository = new GenericRepository<PunishmentType>(_db); } return _PunishmentTypeRepository; } }
        private GenericRepository<DepartmentTeamCompetitionDetail> _DepartmentTeamCompetitionDetailRepository; public GenericRepository<DepartmentTeamCompetitionDetail> DepartmentTeamCompetitionDetailRepository { get { if (_DepartmentTeamCompetitionDetailRepository == null) { _DepartmentTeamCompetitionDetailRepository = new GenericRepository<DepartmentTeamCompetitionDetail>(_db); } return _DepartmentTeamCompetitionDetailRepository; } }
        private GenericRepository<PersonnelCourse> _PersonnelCourseRepository; public GenericRepository<PersonnelCourse> PersonnelCourseRepository { get { if (_PersonnelCourseRepository == null) { _PersonnelCourseRepository = new GenericRepository<PersonnelCourse>(_db); } return _PersonnelCourseRepository; } }
        private GenericRepository<FeatureType> _FeatureTypeRepository; public GenericRepository<FeatureType> FeatureTypeRepository { get { if (_FeatureTypeRepository == null) { _FeatureTypeRepository = new GenericRepository<FeatureType>(_db); } return _FeatureTypeRepository; } }
        private GenericRepository<DiedCause> _DiedCauseRepository; public GenericRepository<DiedCause> DiedCauseRepository { get { if (_DiedCauseRepository == null) { _DiedCauseRepository = new GenericRepository<DiedCause>(_db); } return _DiedCauseRepository; } }
        private GenericRepository<DepartmentHouseBuildingMaterial> _DepartmentHouseBuildingMaterialRepository; public GenericRepository<DepartmentHouseBuildingMaterial> DepartmentHouseBuildingMaterialRepository { get { if (_DepartmentHouseBuildingMaterialRepository == null) { _DepartmentHouseBuildingMaterialRepository = new GenericRepository<DepartmentHouseBuildingMaterial>(_db); } return _DepartmentHouseBuildingMaterialRepository; } }
        private GenericRepository<PowerSupply> _PowerSupplyRepository; public GenericRepository<PowerSupply> PowerSupplyRepository { get { if (_PowerSupplyRepository == null) { _PowerSupplyRepository = new GenericRepository<PowerSupply>(_db); } return _PowerSupplyRepository; } }
        private GenericRepository<CompetitionSkillTypeAgeRange> _CompetitionSkillTypeAgeRangeRepository; public GenericRepository<CompetitionSkillTypeAgeRange> CompetitionSkillTypeAgeRangeRepository { get { if (_CompetitionSkillTypeAgeRangeRepository == null) { _CompetitionSkillTypeAgeRangeRepository = new GenericRepository<CompetitionSkillTypeAgeRange>(_db); } return _CompetitionSkillTypeAgeRangeRepository; } }
        private GenericRepository<Feature> _FeatureRepository; public GenericRepository<Feature> FeatureRepository { get { if (_FeatureRepository == null) { _FeatureRepository = new GenericRepository<Feature>(_db); } return _FeatureRepository; } }
        private GenericRepository<ChildMarriageCause> _ChildMarriageCauseRepository; public GenericRepository<ChildMarriageCause> ChildMarriageCauseRepository { get { if (_ChildMarriageCauseRepository == null) { _ChildMarriageCauseRepository = new GenericRepository<ChildMarriageCause>(_db); } return _ChildMarriageCauseRepository; } }
        private GenericRepository<Country> _CountryRepository; public GenericRepository<Country> CountryRepository { get { if (_CountryRepository == null) { _CountryRepository = new GenericRepository<Country>(_db); } return _CountryRepository; } }
        private GenericRepository<PersonnelLog> _PersonnelLogRepository; public GenericRepository<PersonnelLog> PersonnelLogRepository { get { if (_PersonnelLogRepository == null) { _PersonnelLogRepository = new GenericRepository<PersonnelLog>(_db); } return _PersonnelLogRepository; } }
        private GenericRepository<Job> _JobRepository; public GenericRepository<Job> JobRepository { get { if (_JobRepository == null) { _JobRepository = new GenericRepository<Job>(_db); } return _JobRepository; } }
        private GenericRepository<PersonTeamGrade> _PersonTeamGradeRepository; public GenericRepository<PersonTeamGrade> PersonTeamGradeRepository { get { if (_PersonTeamGradeRepository == null) { _PersonTeamGradeRepository = new GenericRepository<PersonTeamGrade>(_db); } return _PersonTeamGradeRepository; } }
        private GenericRepository<Role> _RoleRepository; public GenericRepository<Role> RoleRepository { get { if (_RoleRepository == null) { _RoleRepository = new GenericRepository<Role>(_db); } return _RoleRepository; } }
        private GenericRepository<DepartmentInsuranceType> _DepartmentInsuranceTypeRepository; public GenericRepository<DepartmentInsuranceType> DepartmentInsuranceTypeRepository { get { if (_DepartmentInsuranceTypeRepository == null) { _DepartmentInsuranceTypeRepository = new GenericRepository<DepartmentInsuranceType>(_db); } return _DepartmentInsuranceTypeRepository; } }
        private GenericRepository<SkillType> _SkillTypeRepository; public GenericRepository<SkillType> SkillTypeRepository { get { if (_SkillTypeRepository == null) { _SkillTypeRepository = new GenericRepository<SkillType>(_db); } return _SkillTypeRepository; } }
        private GenericRepository<PunishmentCheckOutCause> _PunishmentCheckOutCauseRepository; public GenericRepository<PunishmentCheckOutCause> PunishmentCheckOutCauseRepository { get { if (_PunishmentCheckOutCauseRepository == null) { _PunishmentCheckOutCauseRepository = new GenericRepository<PunishmentCheckOutCause>(_db); } return _PunishmentCheckOutCauseRepository; } }
        private GenericRepository<Nationality> _NationalityRepository; public GenericRepository<Nationality> NationalityRepository { get { if (_NationalityRepository == null) { _NationalityRepository = new GenericRepository<Nationality>(_db); } return _NationalityRepository; } }
        private GenericRepository<ExpireCause> _ExpireCauseRepository; public GenericRepository<ExpireCause> ExpireCauseRepository { get { if (_ExpireCauseRepository == null) { _ExpireCauseRepository = new GenericRepository<ExpireCause>(_db); } return _ExpireCauseRepository; } }
        private GenericRepository<FamilyLog> _FamilyLogRepository; public GenericRepository<FamilyLog> FamilyLogRepository { get { if (_FamilyLogRepository == null) { _FamilyLogRepository = new GenericRepository<FamilyLog>(_db); } return _FamilyLogRepository; } }
        private GenericRepository<City> _CityRepository; public GenericRepository<City> CityRepository { get { if (_CityRepository == null) { _CityRepository = new GenericRepository<City>(_db); } return _CityRepository; } }
        private GenericRepository<PersonDamage> _PersonDamageRepository; public GenericRepository<PersonDamage> PersonDamageRepository { get { if (_PersonDamageRepository == null) { _PersonDamageRepository = new GenericRepository<PersonDamage>(_db); } return _PersonDamageRepository; } }
        private GenericRepository<ReconnaissanceCause> _ReconnaissanceCauseRepository; public GenericRepository<ReconnaissanceCause> ReconnaissanceCauseRepository { get { if (_ReconnaissanceCauseRepository == null) { _ReconnaissanceCauseRepository = new GenericRepository<ReconnaissanceCause>(_db); } return _ReconnaissanceCauseRepository; } }
        private GenericRepository<PersonDrugType> _PersonDrugTypeRepository; public GenericRepository<PersonDrugType> PersonDrugTypeRepository { get { if (_PersonDrugTypeRepository == null) { _PersonDrugTypeRepository = new GenericRepository<PersonDrugType>(_db); } return _PersonDrugTypeRepository; } }
        private GenericRepository<RelationType> _RelationTypeRepository; public GenericRepository<RelationType> RelationTypeRepository { get { if (_RelationTypeRepository == null) { _RelationTypeRepository = new GenericRepository<RelationType>(_db); } return _RelationTypeRepository; } }
        private GenericRepository<DamageCause> _DamageCauseRepository; public GenericRepository<DamageCause> DamageCauseRepository { get { if (_DamageCauseRepository == null) { _DamageCauseRepository = new GenericRepository<DamageCause>(_db); } return _DamageCauseRepository; } }
        private GenericRepository<ResidentialContext> _ResidentialContextRepository; public GenericRepository<ResidentialContext> ResidentialContextRepository { get { if (_ResidentialContextRepository == null) { _ResidentialContextRepository = new GenericRepository<ResidentialContext>(_db); } return _ResidentialContextRepository; } }
        private GenericRepository<Province> _ProvinceRepository; public GenericRepository<Province> ProvinceRepository { get { if (_ProvinceRepository == null) { _ProvinceRepository = new GenericRepository<Province>(_db); } return _ProvinceRepository; } }
        private GenericRepository<RoleMemberAccess> _RoleMemberAccessRepository; public GenericRepository<RoleMemberAccess> RoleMemberAccessRepository { get { if (_RoleMemberAccessRepository == null) { _RoleMemberAccessRepository = new GenericRepository<RoleMemberAccess>(_db); } return _RoleMemberAccessRepository; } }
        private GenericRepository<PersonCrimeType> _PersonCrimeTypeRepository; public GenericRepository<PersonCrimeType> PersonCrimeTypeRepository { get { if (_PersonCrimeTypeRepository == null) { _PersonCrimeTypeRepository = new GenericRepository<PersonCrimeType>(_db); } return _PersonCrimeTypeRepository; } }
        private GenericRepository<Limb> _LimbRepository; public GenericRepository<Limb> LimbRepository { get { if (_LimbRepository == null) { _LimbRepository = new GenericRepository<Limb>(_db); } return _LimbRepository; } }
        private GenericRepository<EducationYearClassCourseHistory> _EducationYearClassCourseHistoryRepository; public GenericRepository<EducationYearClassCourseHistory> EducationYearClassCourseHistoryRepository { get { if (_EducationYearClassCourseHistoryRepository == null) { _EducationYearClassCourseHistoryRepository = new GenericRepository<EducationYearClassCourseHistory>(_db); } return _EducationYearClassCourseHistoryRepository; } }
        private GenericRepository<DepartmentLeavingHouseCause> _DepartmentLeavingHouseCauseRepository; public GenericRepository<DepartmentLeavingHouseCause> DepartmentLeavingHouseCauseRepository { get { if (_DepartmentLeavingHouseCauseRepository == null) { _DepartmentLeavingHouseCauseRepository = new GenericRepository<DepartmentLeavingHouseCause>(_db); } return _DepartmentLeavingHouseCauseRepository; } }
        private GenericRepository<Person> _PersonRepository; public GenericRepository<Person> PersonRepository { get { if (_PersonRepository == null) { _PersonRepository = new GenericRepository<Person>(_db); } return _PersonRepository; } }
        private GenericRepository<SegmentReconnaissanceResidentialContext> _SegmentReconnaissanceResidentialContextRepository; public GenericRepository<SegmentReconnaissanceResidentialContext> SegmentReconnaissanceResidentialContextRepository { get { if (_SegmentReconnaissanceResidentialContextRepository == null) { _SegmentReconnaissanceResidentialContextRepository = new GenericRepository<SegmentReconnaissanceResidentialContext>(_db); } return _SegmentReconnaissanceResidentialContextRepository; } }
        private GenericRepository<SkillTypeAgeRange> _SkillTypeAgeRangeRepository; public GenericRepository<SkillTypeAgeRange> SkillTypeAgeRangeRepository { get { if (_SkillTypeAgeRangeRepository == null) { _SkillTypeAgeRangeRepository = new GenericRepository<SkillTypeAgeRange>(_db); } return _SkillTypeAgeRangeRepository; } }
        private GenericRepository<Color> _ColorRepository; public GenericRepository<Color> ColorRepository { get { if (_ColorRepository == null) { _ColorRepository = new GenericRepository<Color>(_db); } return _ColorRepository; } }
        private GenericRepository<DepartmentNationality> _DepartmentNationalityRepository; public GenericRepository<DepartmentNationality> DepartmentNationalityRepository { get { if (_DepartmentNationalityRepository == null) { _DepartmentNationalityRepository = new GenericRepository<DepartmentNationality>(_db); } return _DepartmentNationalityRepository; } }
        private GenericRepository<Expertise> _ExpertiseRepository; public GenericRepository<Expertise> ExpertiseRepository { get { if (_ExpertiseRepository == null) { _ExpertiseRepository = new GenericRepository<Expertise>(_db); } return _ExpertiseRepository; } }
        private GenericRepository<SegmentResidentialContext> _SegmentResidentialContextRepository; public GenericRepository<SegmentResidentialContext> SegmentResidentialContextRepository { get { if (_SegmentResidentialContextRepository == null) { _SegmentResidentialContextRepository = new GenericRepository<SegmentResidentialContext>(_db); } return _SegmentResidentialContextRepository; } }
        private GenericRepository<Team> _TeamRepository; public GenericRepository<Team> TeamRepository { get { if (_TeamRepository == null) { _TeamRepository = new GenericRepository<Team>(_db); } return _TeamRepository; } }
        private GenericRepository<DepartmentPowerSupply> _DepartmentPowerSupplyRepository; public GenericRepository<DepartmentPowerSupply> DepartmentPowerSupplyRepository { get { if (_DepartmentPowerSupplyRepository == null) { _DepartmentPowerSupplyRepository = new GenericRepository<DepartmentPowerSupply>(_db); } return _DepartmentPowerSupplyRepository; } }
        private GenericRepository<Gender> _GenderRepository; public GenericRepository<Gender> GenderRepository { get { if (_GenderRepository == null) { _GenderRepository = new GenericRepository<Gender>(_db); } return _GenderRepository; } }
        private GenericRepository<TreatmentStatus> _TreatmentStatusRepository; public GenericRepository<TreatmentStatus> TreatmentStatusRepository { get { if (_TreatmentStatusRepository == null) { _TreatmentStatusRepository = new GenericRepository<TreatmentStatus>(_db); } return _TreatmentStatusRepository; } }
        private GenericRepository<EducationYearClassMemberHistory> _EducationYearClassMemberHistoryRepository; public GenericRepository<EducationYearClassMemberHistory> EducationYearClassMemberHistoryRepository { get { if (_EducationYearClassMemberHistoryRepository == null) { _EducationYearClassMemberHistoryRepository = new GenericRepository<EducationYearClassMemberHistory>(_db); } return _EducationYearClassMemberHistoryRepository; } }
        private GenericRepository<PersonnelPursuit> _PersonnelPursuitRepository; public GenericRepository<PersonnelPursuit> PersonnelPursuitRepository { get { if (_PersonnelPursuitRepository == null) { _PersonnelPursuitRepository = new GenericRepository<PersonnelPursuit>(_db); } return _PersonnelPursuitRepository; } }
        private GenericRepository<FuelType> _FuelTypeRepository; public GenericRepository<FuelType> FuelTypeRepository { get { if (_FuelTypeRepository == null) { _FuelTypeRepository = new GenericRepository<FuelType>(_db); } return _FuelTypeRepository; } }
        private GenericRepository<AssessmentModelValue> _AssessmentModelValueRepository; public GenericRepository<AssessmentModelValue> AssessmentModelValueRepository { get { if (_AssessmentModelValueRepository == null) { _AssessmentModelValueRepository = new GenericRepository<AssessmentModelValue>(_db); } return _AssessmentModelValueRepository; } }
        private GenericRepository<PersonSkillType> _PersonSkillTypeRepository; public GenericRepository<PersonSkillType> PersonSkillTypeRepository { get { if (_PersonSkillTypeRepository == null) { _PersonSkillTypeRepository = new GenericRepository<PersonSkillType>(_db); } return _PersonSkillTypeRepository; } }
        private GenericRepository<RoleMember> _RoleMemberRepository; public GenericRepository<RoleMember> RoleMemberRepository { get { if (_RoleMemberRepository == null) { _RoleMemberRepository = new GenericRepository<RoleMember>(_db); } return _RoleMemberRepository; } }
        private GenericRepository<DepartmentReferrer> _DepartmentReferrerRepository; public GenericRepository<DepartmentReferrer> DepartmentReferrerRepository { get { if (_DepartmentReferrerRepository == null) { _DepartmentReferrerRepository = new GenericRepository<DepartmentReferrer>(_db); } return _DepartmentReferrerRepository; } }
        private GenericRepository<BeltColor> _BeltColorRepository; public GenericRepository<BeltColor> BeltColorRepository { get { if (_BeltColorRepository == null) { _BeltColorRepository = new GenericRepository<BeltColor>(_db); } return _BeltColorRepository; } }
        private GenericRepository<EducationStatus> _EducationStatusRepository; public GenericRepository<EducationStatus> EducationStatusRepository { get { if (_EducationStatusRepository == null) { _EducationStatusRepository = new GenericRepository<EducationStatus>(_db); } return _EducationStatusRepository; } }
        private GenericRepository<PersonnelStatus> _PersonnelStatusRepository; public GenericRepository<PersonnelStatus> PersonnelStatusRepository { get { if (_PersonnelStatusRepository == null) { _PersonnelStatusRepository = new GenericRepository<PersonnelStatus>(_db); } return _PersonnelStatusRepository; } }
        private GenericRepository<MigrationCause> _MigrationCauseRepository; public GenericRepository<MigrationCause> MigrationCauseRepository { get { if (_MigrationCauseRepository == null) { _MigrationCauseRepository = new GenericRepository<MigrationCause>(_db); } return _MigrationCauseRepository; } }
        private GenericRepository<SegmentReconnaissanceDrugType> _SegmentReconnaissanceDrugTypeRepository; public GenericRepository<SegmentReconnaissanceDrugType> SegmentReconnaissanceDrugTypeRepository { get { if (_SegmentReconnaissanceDrugTypeRepository == null) { _SegmentReconnaissanceDrugTypeRepository = new GenericRepository<SegmentReconnaissanceDrugType>(_db); } return _SegmentReconnaissanceDrugTypeRepository; } }
        private GenericRepository<Referrer> _ReferrerRepository; public GenericRepository<Referrer> ReferrerRepository { get { if (_ReferrerRepository == null) { _ReferrerRepository = new GenericRepository<Referrer>(_db); } return _ReferrerRepository; } }
        private GenericRepository<SubSystem> _SubSystemRepository; public GenericRepository<SubSystem> SubSystemRepository { get { if (_SubSystemRepository == null) { _SubSystemRepository = new GenericRepository<SubSystem>(_db); } return _SubSystemRepository; } }
        private GenericRepository<JobStatus> _JobStatusRepository; public GenericRepository<JobStatus> JobStatusRepository { get { if (_JobStatusRepository == null) { _JobStatusRepository = new GenericRepository<JobStatus>(_db); } return _JobStatusRepository; } }
        private GenericRepository<PersonnelPursuitResult> _PersonnelPursuitResultRepository; public GenericRepository<PersonnelPursuitResult> PersonnelPursuitResultRepository { get { if (_PersonnelPursuitResultRepository == null) { _PersonnelPursuitResultRepository = new GenericRepository<PersonnelPursuitResult>(_db); } return _PersonnelPursuitResultRepository; } }
        private GenericRepository<Region> _RegionRepository; public GenericRepository<Region> RegionRepository { get { if (_RegionRepository == null) { _RegionRepository = new GenericRepository<Region>(_db); } return _RegionRepository; } }
        private GenericRepository<FamilyAppliance> _FamilyApplianceRepository; public GenericRepository<FamilyAppliance> FamilyApplianceRepository { get { if (_FamilyApplianceRepository == null) { _FamilyApplianceRepository = new GenericRepository<FamilyAppliance>(_db); } return _FamilyApplianceRepository; } }
        private GenericRepository<PersonMedicalMonitoring> _PersonMedicalMonitoringRepository; public GenericRepository<PersonMedicalMonitoring> PersonMedicalMonitoringRepository { get { if (_PersonMedicalMonitoringRepository == null) { _PersonMedicalMonitoringRepository = new GenericRepository<PersonMedicalMonitoring>(_db); } return _PersonMedicalMonitoringRepository; } }
        private GenericRepository<NeedType> _NeedTypeRepository; public GenericRepository<NeedType> NeedTypeRepository { get { if (_NeedTypeRepository == null) { _NeedTypeRepository = new GenericRepository<NeedType>(_db); } return _NeedTypeRepository; } }
        private GenericRepository<DepartmentRelationType> _DepartmentRelationTypeRepository; public GenericRepository<DepartmentRelationType> DepartmentRelationTypeRepository { get { if (_DepartmentRelationTypeRepository == null) { _DepartmentRelationTypeRepository = new GenericRepository<DepartmentRelationType>(_db); } return _DepartmentRelationTypeRepository; } }
        private GenericRepository<InsuranceType> _InsuranceTypeRepository; public GenericRepository<InsuranceType> InsuranceTypeRepository { get { if (_InsuranceTypeRepository == null) { _InsuranceTypeRepository = new GenericRepository<InsuranceType>(_db); } return _InsuranceTypeRepository; } }
        private GenericRepository<SegmentDrugType> _SegmentDrugTypeRepository; public GenericRepository<SegmentDrugType> SegmentDrugTypeRepository { get { if (_SegmentDrugTypeRepository == null) { _SegmentDrugTypeRepository = new GenericRepository<SegmentDrugType>(_db); } return _SegmentDrugTypeRepository; } }
        private GenericRepository<DisableType> _DisableTypeRepository; public GenericRepository<DisableType> DisableTypeRepository { get { if (_DisableTypeRepository == null) { _DisableTypeRepository = new GenericRepository<DisableType>(_db); } return _DisableTypeRepository; } }
        private GenericRepository<Personnel> _PersonnelRepository; public GenericRepository<Personnel> PersonnelRepository { get { if (_PersonnelRepository == null) { _PersonnelRepository = new GenericRepository<Personnel>(_db); } return _PersonnelRepository; } }
        private GenericRepository<FamilyPhone> _FamilyPhoneRepository; public GenericRepository<FamilyPhone> FamilyPhoneRepository { get { if (_FamilyPhoneRepository == null) { _FamilyPhoneRepository = new GenericRepository<FamilyPhone>(_db); } return _FamilyPhoneRepository; } }
        private GenericRepository<PersonLog> _PersonLogRepository; public GenericRepository<PersonLog> PersonLogRepository { get { if (_PersonLogRepository == null) { _PersonLogRepository = new GenericRepository<PersonLog>(_db); } return _PersonLogRepository; } }
        private GenericRepository<PersonDentalMonitoring> _PersonDentalMonitoringRepository; public GenericRepository<PersonDentalMonitoring> PersonDentalMonitoringRepository { get { if (_PersonDentalMonitoringRepository == null) { _PersonDentalMonitoringRepository = new GenericRepository<PersonDentalMonitoring>(_db); } return _PersonDentalMonitoringRepository; } }
        private GenericRepository<GoodsCategory> _GoodsCategoryRepository; public GenericRepository<GoodsCategory> GoodsCategoryRepository { get { if (_GoodsCategoryRepository == null) { _GoodsCategoryRepository = new GenericRepository<GoodsCategory>(_db); } return _GoodsCategoryRepository; } }
        private GenericRepository<DepartmentReligion> _DepartmentReligionRepository; public GenericRepository<DepartmentReligion> DepartmentReligionRepository { get { if (_DepartmentReligionRepository == null) { _DepartmentReligionRepository = new GenericRepository<DepartmentReligion>(_db); } return _DepartmentReligionRepository; } }
        private GenericRepository<DrugHistory> _DrugHistoryRepository; public GenericRepository<DrugHistory> DrugHistoryRepository { get { if (_DrugHistoryRepository == null) { _DrugHistoryRepository = new GenericRepository<DrugHistory>(_db); } return _DrugHistoryRepository; } }
        private GenericRepository<SegmentFuelType> _SegmentFuelTypeRepository; public GenericRepository<SegmentFuelType> SegmentFuelTypeRepository { get { if (_SegmentFuelTypeRepository == null) { _SegmentFuelTypeRepository = new GenericRepository<SegmentFuelType>(_db); } return _SegmentFuelTypeRepository; } }
        private GenericRepository<PersonNeedType> _PersonNeedTypeRepository; public GenericRepository<PersonNeedType> PersonNeedTypeRepository { get { if (_PersonNeedTypeRepository == null) { _PersonNeedTypeRepository = new GenericRepository<PersonNeedType>(_db); } return _PersonNeedTypeRepository; } }
        private GenericRepository<AssessmentModelCategory> _AssessmentModelCategoryRepository; public GenericRepository<AssessmentModelCategory> AssessmentModelCategoryRepository { get { if (_AssessmentModelCategoryRepository == null) { _AssessmentModelCategoryRepository = new GenericRepository<AssessmentModelCategory>(_db); } return _AssessmentModelCategoryRepository; } }
        private GenericRepository<GoodsType> _GoodsTypeRepository; public GenericRepository<GoodsType> GoodsTypeRepository { get { if (_GoodsTypeRepository == null) { _GoodsTypeRepository = new GenericRepository<GoodsType>(_db); } return _GoodsTypeRepository; } }
        private GenericRepository<DrugStatus> _DrugStatusRepository; public GenericRepository<DrugStatus> DrugStatusRepository { get { if (_DrugStatusRepository == null) { _DrugStatusRepository = new GenericRepository<DrugStatus>(_db); } return _DrugStatusRepository; } }
        private GenericRepository<PersonDisableType> _PersonDisableTypeRepository; public GenericRepository<PersonDisableType> PersonDisableTypeRepository { get { if (_PersonDisableTypeRepository == null) { _PersonDisableTypeRepository = new GenericRepository<PersonDisableType>(_db); } return _PersonDisableTypeRepository; } }
        private GenericRepository<ChildAbuseType> _ChildAbuseTypeRepository; public GenericRepository<ChildAbuseType> ChildAbuseTypeRepository { get { if (_ChildAbuseTypeRepository == null) { _ChildAbuseTypeRepository = new GenericRepository<ChildAbuseType>(_db); } return _ChildAbuseTypeRepository; } }
        private GenericRepository<DepartmentSegment> _DepartmentSegmentRepository; public GenericRepository<DepartmentSegment> DepartmentSegmentRepository { get { if (_DepartmentSegmentRepository == null) { _DepartmentSegmentRepository = new GenericRepository<DepartmentSegment>(_db); } return _DepartmentSegmentRepository; } }
        private GenericRepository<AssessmentModel> _AssessmentModelRepository; public GenericRepository<AssessmentModel> AssessmentModelRepository { get { if (_AssessmentModelRepository == null) { _AssessmentModelRepository = new GenericRepository<AssessmentModel>(_db); } return _AssessmentModelRepository; } }
        private GenericRepository<DepartmentResidenceType> _DepartmentResidenceTypeRepository; public GenericRepository<DepartmentResidenceType> DepartmentResidenceTypeRepository { get { if (_DepartmentResidenceTypeRepository == null) { _DepartmentResidenceTypeRepository = new GenericRepository<DepartmentResidenceType>(_db); } return _DepartmentResidenceTypeRepository; } }
        private GenericRepository<EducationYearClassCourseTime> _EducationYearClassCourseTimeRepository; public GenericRepository<EducationYearClassCourseTime> EducationYearClassCourseTimeRepository { get { if (_EducationYearClassCourseTimeRepository == null) { _EducationYearClassCourseTimeRepository = new GenericRepository<EducationYearClassCourseTime>(_db); } return _EducationYearClassCourseTimeRepository; } }
        private GenericRepository<DrugType> _DrugTypeRepository; public GenericRepository<DrugType> DrugTypeRepository { get { if (_DrugTypeRepository == null) { _DrugTypeRepository = new GenericRepository<DrugType>(_db); } return _DrugTypeRepository; } }
        private GenericRepository<Goods> _GoodsRepository; public GenericRepository<Goods> GoodsRepository { get { if (_GoodsRepository == null) { _GoodsRepository = new GenericRepository<Goods>(_db); } return _GoodsRepository; } }
        private GenericRepository<DepartmentBank> _DepartmentBankRepository; public GenericRepository<DepartmentBank> DepartmentBankRepository { get { if (_DepartmentBankRepository == null) { _DepartmentBankRepository = new GenericRepository<DepartmentBank>(_db); } return _DepartmentBankRepository; } }
        private GenericRepository<Belive> _BeliveRepository; public GenericRepository<Belive> BeliveRepository { get { if (_BeliveRepository == null) { _BeliveRepository = new GenericRepository<Belive>(_db); } return _BeliveRepository; } }
        private GenericRepository<Segment> _SegmentRepository; public GenericRepository<Segment> SegmentRepository { get { if (_SegmentRepository == null) { _SegmentRepository = new GenericRepository<Segment>(_db); } return _SegmentRepository; } }
        private GenericRepository<TeamRequiredGoods> _TeamRequiredGoodsRepository; public GenericRepository<TeamRequiredGoods> TeamRequiredGoodsRepository { get { if (_TeamRequiredGoodsRepository == null) { _TeamRequiredGoodsRepository = new GenericRepository<TeamRequiredGoods>(_db); } return _TeamRequiredGoodsRepository; } }

        public void Dispose()
        {
            _db.Dispose();
            _db.Dispose();
            if (_dbAttachment != null)
                _dbAttachment.Dispose();
        }
        public void Save()
        {
            _db.SaveChanges();
            _dbLog.SaveChanges();

            if (_dbAttachment != null)
                _dbAttachment.SaveChanges();
        }
    }
}
