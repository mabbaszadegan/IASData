@model DAL.PersonViewModel
@{
}
@{
    ViewBag.Title = "ویرایش";
}
@Html.HiddenFor(q => q.NationalityId, new { id = "selectedNationalityId" })
@Html.HiddenFor(q => q.EthnicId, new { id = "selectedEthnicId" })


@using (Ajax.BeginForm(
    "EditMember",
    "ManagePerson",
    new AjaxOptions
    {
        UpdateTargetId = "editMemberResult",
        InsertionMode = InsertionMode.Replace,
        LoadingElementId = "modalProgress",
        OnComplete = "updateProfilePic",

    },
     new { enctype = "multipart/form-data" })
    )
{
    <div id="editMemberSection">
        @Html.HiddenFor(q => q.PersonId)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row form-group" id="">
            <div class="input-group  col-md-3 col-sm-12 mb-3">
                <div class="input-group-append">
                    <span class="input-group-text" id="basic-addon2">تاریخ شناسایی</span>
                </div>
                @*@Html.EditorFor(model => model.PersonFilingDateSolar, new { htmlAttributes = new { @class = "form-control" } })*@

                <input type="text" class="form-control" name="PersonFilingDateSolar" value="@Model.PersonFilingDateSolar" id="PersonFilingDateSolar" placeholder="" data-name="datepicker1" data-mddatetimepicker="true" data-targetselector="#PersonFilingDateSolar"
                       data-trigger="click" />
                <div class="input-group-append" data-name="datepicker1" data-mddatetimepicker="true" data-targetselector="#PersonFilingDateSolar"
                     data-trigger="click" data-enabletimepicker="false" data-isgregorian="false" data-englishnumber="false">
                    <span class="input-group-text" id="basic-addon2"><span class="fa fa-calendar"></span></span>
                </div>
                @Html.ValidationMessageFor(model => model.PersonFilingDateSolar, "", new { @class = "text-danger" })

            </div>

            <div class="input-group  col-md-3 col-sm-12 mb-3">
                <div class="input-group-append">
                    @Html.LabelFor(model => model.PersonFilingName, htmlAttributes: new { @class = "input-group-text" })
                </div>
                @Html.EditorFor(model => model.PersonFilingName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PersonFilingName, "", new { @class = "text-danger" })
            </div>
            <div class="input-group  col-md-3 col-sm-12 mb-3">
                <div class="input-group-append">
                    <span class="input-group-text" id="basic-addon2">وضعیت</span>
                </div>
                @Html.DropDownListFor(Model => Model.PersonStatusId, null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PersonStatusId, "", new { @class = "text-danger" })
            </div>
            <div class="input-group  col-md-3 col-sm-12 mb-3">
                <div class="input-group-append">
                    <span class="input-group-text" id="basic-addon2">تاریخ شروع حمایت</span>
                </div>
                <input type="text" class="form-control" id="PersonCoveredDateSolar" name="PersonCoveredDateSolar" value="@Model.PersonCoveredDateSolar" placeholder="" data-trigger="click" data-name="datepicker1" data-mddatetimepicker="true" data-targetselector="#PersonCoveredDateSolar" />
                <div class="input-group-append" data-name="datepicker1" data-mddatetimepicker="true" data-targetselector="#PersonCoveredDateSolar"
                     data-trigger="click" data-enabletimepicker="false" data-isgregorian="false" data-englishnumber="false">
                    <span class="input-group-text" id="basic-addon2">    <span class="fa fa-calendar"></span></span>
                </div>
            </div>
            <div class="input-group col-12 mb-3 hidden" style="display:none;">
                <div class="input-group-append">
                    <span class="input-group-text" id="basic-addon2">شرح شناسایی</span>
                </div>
                @Html.EditorFor(model => model.PersonCoveredDesc, new { htmlAttributes = new { @class = "form-control" } })
            </div>

            <div class="input-group  col-md-3 col-sm-12 mb-3">
                <div class="input-group-append">
                    <span class="input-group-text" id="basic-addon2">دین</span>
                </div>
                @Html.DropDownListFor(Model => Model.BeliveId, null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BeliveId, "", new { @class = "text-danger" })
            </div>

            <div class="input-group  col-md-3 col-sm-12 mb-3" id="ReligionSection">
                <div class="input-group-append">
                    <span class="input-group-text" id="basic-addon2">مذهب</span>
                </div>
                @Html.DropDownListFor(Model => Model.ReligionId, null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ReligionId, "", new { @class = "text-danger" })
            </div>


            <div class="input-group  col-md-3 col-sm-12 mb-3">
                <div class="input-group-append">
                    <span class="input-group-text" id="basic-addon2">جنسیت</span>
                </div>
                @Html.DropDownListFor(Model => Model.GenderId, null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.GenderId, "", new { @class = "text-danger" })
            </div>




        </div>
        <div class="row" id="secPerson">

            <div class="input-group col-md-3 col-sm-12 mb-3">
                <div class="input-group-append">
                    <span class="input-group-text" id="basic-addon2">موقعیت در خانواده</span>
                </div>
                @Html.DropDownListFor(Model => Model.RelationTypeId, null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RelationTypeId, "", new { @class = "text-danger" })
            </div>

            <div class="input-group  col-md-3 col-sm-12 mb-3">
                <div class="input-group-append">
                    @Html.LabelFor(model => model.PersonFirstName, htmlAttributes: new { @class = "input-group-text" })
                </div>
                @Html.EditorFor(model => model.PersonFirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PersonFirstName, "", new { @class = "text-danger" })
            </div>

            <div class="input-group  col-md-3 col-sm-12 mb-3">
                <div class="input-group-append">
                    @Html.LabelFor(model => model.PersonLastName, htmlAttributes: new { @class = "input-group-text" })
                </div>
                @Html.EditorFor(model => model.PersonLastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PersonLastName, "", new { @class = "text-danger" })
            </div>

            <div class="input-group  col-md-3 col-sm-12 mb-3">
                <div class="input-group-append">
                    @Html.LabelFor(model => model.PersonFatherName, htmlAttributes: new { @class = "input-group-text" })
                </div>
                @Html.EditorFor(model => model.PersonFatherName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PersonFatherName, "", new { @class = "text-danger" })
            </div>
            <div class="input-group  col-md-3 col-sm-12 mb-3">
                <div class="input-group-append">
                    @Html.LabelFor(model => model.PersonMotherName, htmlAttributes: new { @class = "input-group-text" })
                </div>
                @Html.EditorFor(model => model.PersonMotherName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PersonMotherName, "", new { @class = "text-danger" })
            </div>


            <div class="input-group  col-md-3 col-sm-12 mb-3">
                <div class="input-group-append">
                    <span class="input-group-text" id="basic-addon2">تاریخ تولد</span>
                </div>
                @Html.EditorFor(model => model.PersonBirthDay, new { htmlAttributes = new { @class = "form-control", @placeholder = "روز" } })
                @Html.EditorFor(model => model.PersonBirthMonth, new { htmlAttributes = new { @class = "form-control", @placeholder = "ماه" } })
                @Html.EditorFor(model => model.PersonBirthYear, new { htmlAttributes = new { @class = "form-control ", @placeholder = "سال (4رقم)", } })
            </div>

            @if (Model.NationalityId == 1)
            {
                <div class="input-group  col-md-3 col-sm-12 mb-3">
                    <div class="input-group-append">
                        @Html.LabelFor(model => model.PersonNationalCode, htmlAttributes: new { @class = "input-group-text" })
                    </div>
                    @Html.EditorFor(model => model.PersonNationalCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PersonNationalCode, "", new { @class = "text-danger" })
                </div>
                <div class="input-group  col-md-3 col-sm-12 mb-3">
                    <div class="input-group-append">
                        @Html.LabelFor(model => model.PersonIdentityNo, htmlAttributes: new { @class = "input-group-text" })
                    </div>
                    @Html.EditorFor(model => model.PersonIdentityNo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PersonIdentityNo, "", new { @class = "text-danger" })
                </div>
            }
            <div class="input-group  col-md-3 col-sm-12 mb-3">
                <div class="input-group-append">
                    <span class="input-group-text" id="basic-addon2">وضعیت تاهل</span>
                </div>
                @Html.DropDownListFor(Model => Model.MaritalStatusId, null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MaritalStatusId, "", new { @class = "text-danger" })
            </div>
            <div class="input-group  col-md-3 col-sm-12 mb-3">
                <div class="input-group-append">
                    <span class="input-group-text" id="basic-addon2">ملیت</span>
                </div>
                @Html.DropDownListFor(Model => Model.NationalityId, null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.NationalityId, "", new { @class = "text-danger" })
            </div>

            <div class="input-group  col-md-3 col-sm-12 mb-3">
                <div class="input-group-append">
                    <span class="input-group-text" id="basic-addon2">قومیت</span>
                </div>
                @Html.DropDownListFor(Model => Model.EthnicId, null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EthnicId, "", new { @class = "text-danger" })
            </div>
            <div class="input-group col-md-3 col-sm-12 mb-3">
                <div class="input-group-append">
                    <span class="input-group-text" id="basic-addon2">مدت مهاجرت</span>
                </div>
                @Html.EditorFor(Model => Model.MigrateDuration, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MigrateDuration, "", new { @class = "text-danger" })
                <div class="input-group-append">
                    <span class="input-group-text" id="basic-addon2">ماه</span>
                </div>
            </div>

            <div class=" col-xs-12 col-sm-6 col-md-2 col-lg-2">
                <div class="input-group">

                    <label for="IsParent" class="btn btn-warning">
                        سرپرست
                        @Html.CheckBoxFor(Model => Model.IsParent, new { @class = "", @id = "IsParent" })
                        @*<input type="checkbox" data-val="true" id="IsParent" name="IsParent" value="@Model.IsParent" checked="@Model.IsParent" class="badgebox">*@
                        @*<span class="badge bg-white">&check;</span>*@


                    </label>


                </div>
            </div>

        </div>
        <div class=" text-left">
            <div>

                <a class="btn btn-light btn-sm" href="#" data-dismiss="modal" aria-label="Close">
                    <span class="fa fa-undo ml-3"></span>بازگشت
                </a>
                @Ajax.ActionLink(" اطلاعات تکیلی فرد", "PersonMostInfoIndex", "PersonMostInfo", new { id = Model.PersonId }, new AjaxOptions
                {
                    UpdateTargetId = "ModalBody",
                    InsertionMode = InsertionMode.Replace,
                    LoadingElementId = "modalProgress",
                    OnBegin = "showPersonMostInfo('اطلاعات تکمیلی "+Model.PersonFullName+"')",

                }, new { @class = "btn btn-warning fa fa-wrench" })

                @Ajax.ActionLink("تکمیل اطلاعات خانواده", "FamilyIndex", "Family", new { id = Model.FamilyId }, new AjaxOptions
                {
                    UpdateTargetId = "ModalBody",
                    InsertionMode = InsertionMode.Replace,
                    LoadingElementId = "modalProgress",
                    OnBegin = "showFamilyInfoSection('اطلاعات تکمیلی خانواده "+Model.PersonLastName+"')",

                }, new { @class = "btn btn-info btn-sm" })


                <a class="btn btn-primary btn-sm" href="#" onclick="showAddNewMember(@Model.FamilyId,'تعریف سایر اعضای خانواده @Model.PersonLastName')">
                    <span class="fa fa-male ml-3"></span>تعریف سایر اعضای خانواده
                </a>

                <button class="btn btn-success btn-sm" type="submit">
                    <span class="fa fa-edit ml-3"></span>ثبت
                </button>

            </div>
        </div>
    </div>
    <div class="" id="editMemberResult">

    </div>

    @Html.Action("GetPersonsByFamilyId", new { familyId = Model.FamilyId })

}
<script src="http://data.sosapoverty.org/CustomReferences/Scripts/MdBootstrapPersianDateTimePicker/jalaaliNew.js"></script>
<script src="http://data.sosapoverty.org/CustomReferences/Scripts/MdBootstrapPersianDateTimePicker/jquery.Bootstrap-PersianDateTimePickerNew.js"></script>

<script>
    $(document).ready(function () {
        var nID = $("#selectedNationalityId").val();
        var targetControl = $("#editMemberSection #EthnicId");
        selectNationality(nID, targetControl, $("#selectedEthnicId").val());

        $("#editMemberSection #NationalityId").change(function () {
            var nID = $("#editMemberSection #NationalityId").val();
            //var targetControl = $("#editMemberSection #EthnicId");
            selectNationality(nID, targetControl, $("#selectedEthnicId").val());
        });

        $("#editMemberSection #BeliveId").change(function () {
            if ($("#BeliveId").val() == 1)
                $("#editMemberSection #ReligionSection").show(500);
            else
                $("#editMemberSection #ReligionSection").hide(500);

        });
    });




    //function selectNationality() {
    //    var nID = $("#editMemberSection #NationalityId").val();
    //    $.getJSON("../Loockup/LoadEthnicsByNationalityId", { id: nID },
    //        function (data) {
    //            var select = $("#editMemberSection #EthnicId");
    //            select.empty();
    //            select.append($('<option/>', {
    //                value: 0,
    //                text: ""
    //            }));

    //            $.each(data, function (index, itemData) {
    //                if ($('#EthnicId').val() != itemData.Value) {
    //                    select.append($('<option></option>', {
    //                        value: itemData.Value,
    //                        text: itemData.Text
    //                    }));
    //                }
    //                else {
    //                    select.append($('<option selected="selected" value="' + itemData.Value + '">' + itemData.Text + '</option>', {
    //                        value: itemData.Value,
    //                        text: itemData.Text,

    //                    }));
    //                }
    //            });
    //        });

    //}
</script>

