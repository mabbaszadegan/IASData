@model DAL.PersonViewModel


@using (Ajax.BeginForm(
    "EditSocialWork",
    "PersonMostInfo",
     new AjaxOptions
     {
         UpdateTargetId = "editSocialWorkResult",
         InsertionMode = InsertionMode.Replace,
         LoadingElementId = "modalProgress",
         OnComplete = "updateProfilePic",

     },
     new { enctype = "multipart/form-data" })
    )
{
<div id="editSocialWorkSection">

    @Html.HiddenFor(q => q.JobId, new { id = "selectedJobId" })
    @Html.HiddenFor(q => q.PersonId)
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="row form-group" id="">
        <div class=" col-xs-12 col-sm-6 col-md-2 col-lg-2">
            <div class="input-group">
                <label for="PersonLeavedFamily" class="btn btn-warning">
                    ترک خانواده
                    @Html.CheckBoxFor(Model => Model.PersonLeavedFamily, new { @class = "", @id = "PersonLeavedFamily" })

                </label>
            </div>
        </div>
        <div class="input-group  col-md-4 col-sm-12 mb-3">
            <div class="input-group-append">
                <span class="input-group-text" id="basic-addon2">تاریخ ترک خانواده</span>
            </div>

            <input type="text" class="form-control" name="PersonLeavedFamilyDateSolar" value="@Model.PersonLeavedFamilyDateSolar" id="PersonLeavedFamilyDateSolar" placeholder="" data-name="datepicker1" data-mddatetimepicker="true" data-targetselector="#PersonLeavedFamilyDateSolar"
                   data-trigger="click" />
            <div class="input-group-append" data-name="datepicker1" data-mddatetimepicker="true" data-targetselector="#PersonLeavedFamilyDateSolar"
                 data-trigger="click" data-enabletimepicker="false" data-isgregorian="false" data-englishnumber="false">
                <span class="input-group-text" id="basic-addon2"><span class="fa fa-calendar"></span></span>
            </div>
            @Html.ValidationMessageFor(model => model.PersonLeavedFamilyDateSolar, "", new { @class = "text-danger" })

        </div>

        <div class="input-group  col-md-6 col-sm-12 mb-3">
            <div class="input-group-append">
                @Html.LabelFor(model => model.PersonLeavingHouseCauseDesc, htmlAttributes: new { @class = "input-group-text" })
            </div>
            @Html.EditorFor(model => model.PersonLeavingHouseCauseDesc, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PersonLeavingHouseCauseDesc, "", new { @class = "text-danger" })
        </div>
        <div class="input-group  col-md-6 col-sm-12 mb-3">
            <div class="input-group-append">
                @Html.LabelFor(model => model.PersonLeavingHouseDesc, htmlAttributes: new { @class = "input-group-text" })
            </div>
            @Html.EditorFor(model => model.PersonLeavingHouseDesc, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PersonLeavingHouseDesc, "", new { @class = "text-danger" })
        </div>
        <div class="input-group  col-md-6 col-sm-12 mb-3">
            <div class="input-group-append">
                @Html.LabelFor(model => model.PersonAddress, htmlAttributes: new { @class = "input-group-text" })
            </div>
            @Html.EditorFor(model => model.PersonAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PersonAddress, "", new { @class = "text-danger" })
        </div>


        <div class=" col-xs-12 col-sm-6 col-md-4 col-lg-3">
            <div class="input-group">
                <label for="PersonIsWorkedChild" class="btn btn-warning">
                    آیا زیر 18سال کار میکرده است؟
                    @Html.CheckBoxFor(Model => Model.PersonIsWorkedChild, new { @class = "", @id = "PersonIsWorkedChild" })
                </label>
            </div>
        </div>
        <div class="input-group  col-md-8 col-sm-12 mb-3">
            <div class="input-group-append">
                @Html.LabelFor(model => model.JobDesc, htmlAttributes: new { @class = "input-group-text" })
            </div>
            @Html.EditorFor(model => model.JobDesc, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.JobDesc, "", new { @class = "text-danger" })
        </div>
        <div class="input-group  col-md-3 col-sm-12 mb-3">
            <div class="input-group-append">
                <span class="input-group-text" id="basic-addon2">نوع شغل</span>
            </div>
            @Html.DropDownListFor(Model => Model.JobStatusId, null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.JobStatusId, "", new { @class = "text-danger" })
        </div>


        <div class="input-group  col-md-3 col-sm-12 mb-3">
            <div class="input-group-append">
                <span class="input-group-text" id="basic-addon2">شغل</span>
            </div>
            @Html.DropDownListFor(Model => Model.JobId, null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.JobId, "", new { @class = "text-danger" })
        </div>
        <div class="input-group  col-md-6 col-sm-12 mb-3">
            <div class="input-group-append">
                @Html.LabelFor(model => model.PersonLivelihood, htmlAttributes: new { @class = "input-group-text" })
            </div>
            @Html.EditorFor(model => model.PersonLivelihood, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PersonLivelihood, "", new { @class = "text-danger" })
        </div>

        <div class="input-group  col-md-3 col-sm-12 mb-3">
            <div class="input-group-append">
                <span class="input-group-text" id="basic-addon2">وضعیت تحصیلی</span>
            </div>
            @Html.DropDownListFor(Model => Model.EducationStatusId, null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.EducationStatusId, "", new { @class = "text-danger" })
        </div>
        <div class="input-group  col-md-3 col-sm-12 mb-3">
            <div class="input-group-append">
                <span class="input-group-text" id="basic-addon2">تحصیلات</span>
            </div>
            @Html.DropDownListFor(Model => Model.EducationTypeId, null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.EducationTypeId, "", new { @class = "text-danger" })
        </div>
        <div class="input-group  col-md-6 col-sm-12 mb-3">
            <div class="input-group-append">
                @Html.LabelFor(model => model.EducationDesc, htmlAttributes: new { @class = "input-group-text" })
            </div>
            @Html.EditorFor(model => model.EducationDesc, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EducationDesc, "", new { @class = "text-danger" })
        </div>

        <div class=" col-xs-12 col-sm-6 col-md-4 col-lg-3">
            <div class="input-group">
                <label for="PersonHasChildMarriage" class="btn btn-warning">
                    آیا زیر 18سال ازدواج کرده است؟
                    @Html.CheckBoxFor(Model => Model.PersonHasChildMarriage, new { @class = "", @id = "PersonHasChildMarriage" })

                </label>
            </div>
        </div>
        <div class="input-group  col-md-8 col-sm-12 mb-3">
            <div class="input-group-append">
                @Html.LabelFor(model => model.PersonChildMarriageDesc, htmlAttributes: new { @class = "input-group-text" })
            </div>
            @Html.EditorFor(model => model.PersonChildMarriageDesc, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PersonChildMarriageDesc, "", new { @class = "text-danger" })
        </div>

        <div class="input-group  col-md-3 col-sm-12 mb-3">
            <div class="input-group-append">
                <span class="input-group-text" id="basic-addon2">سابقه مصرف</span>
            </div>
            @Html.DropDownListFor(Model => Model.DrugHistoryId, null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DrugHistoryId, "", new { @class = "text-danger" })
        </div>
        <div class="input-group  col-md-3 col-sm-12 mb-3">
            <div class="input-group-append">
                <span class="input-group-text" id="basic-addon2">وضعیت اعتیاد</span>
            </div>
            @Html.DropDownListFor(Model => Model.DrugStatusId, null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DrugStatusId, "", new { @class = "text-danger" })
        </div>
        <div class="input-group  col-md-3 col-sm-12 mb-3">
            <div class="input-group-append">
                <span class="input-group-text" id="basic-addon2">سابقه ترک</span>
            </div>
            @Html.DropDownListFor(Model => Model.DrugWithdrawalHistoryId, null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DrugWithdrawalHistoryId, "", new { @class = "text-danger" })
        </div>
        @*<div class=" col-xs-12 col-sm-6 col-md-2 col-lg-2">
                <div class="input-group">
                    <label for="PersonCanTraveling" class="btn btn-warning">
                        آیا امکان تردد دارد؟
                        @Html.CheckBoxFor(Model => Model.PersonCanTraveling, new { @class = "", @id = "PersonCanTraveling" })

                    </label>
                </div>
            </div>
            <div class="input-group  col-md-3 col-sm-12 mb-3">
                <div class="input-group-append">
                    @Html.LabelFor(model => model.PersonChildMarriageDesc, htmlAttributes: new { @class = "input-group-text" })
                </div>
                @Html.EditorFor(model => model.PersonChildMarriageDesc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PersonChildMarriageDesc, "", new { @class = "text-danger" })
            </div>*@

        <div class="input-group  col-md-12 col-sm-12 mb-3">
            <div class="input-group-append">
                @Html.LabelFor(model => model.PersonDesc, htmlAttributes: new { @class = "input-group-text" })
            </div>
            @Html.EditorFor(model => model.PersonDesc, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PersonDesc, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class=" text-left">
        <div >
            <button class="btn btn-success btn-sm" type="submit">
                <span class="fa fa-edit ml-3"></span>ثبت
            </button>

        </div>
    </div>
</div>
    <div class="" id="editSocialWorkResult">

    </div>
}


<script src="@IASData.Utility.ConfigReader.ReferenceSeverUrl/Scripts/MdBootstrapPersianDateTimePicker/jalaaliNew.js"></script>
<script src="@IASData.Utility.ConfigReader.ReferenceSeverUrl/Scripts/MdBootstrapPersianDateTimePicker/jquery.Bootstrap-PersianDateTimePickerNew.js"></script>

<script>
    var nID = $("#editSocialWorkSection #JobStatusId").val();
    var targetControl = $("#editSocialWorkSection #JobId");
    selectJobStatus(nID, targetControl, $("#selectedJobId").val());

    $("#editSocialWorkSection #JobStatusId").change(function () {
        var nID = $("#editSocialWorkSection #JobStatusId").val();
        selectJobStatus(nID, targetControl);
    });
</script>